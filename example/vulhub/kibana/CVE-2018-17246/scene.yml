version: "2"
services:
  users:
    build:
      context: ${CONTEXT_PATH:-.}/bot
    container_name: users
    environment:
      TARGET_URL: http://192.168.123.3:5601
    networks:
      subnet:
        ipv4_address: 192.168.123.2
  web:
    build:
      context: ${CONTEXT_PATH:-.}
    environment:
      ELASTICSEARCH_URL: "http://192.168.123.4:9200"
      ELASTICSEARCH_HOSTS: '["http://192.168.123.4:9200"]'
    ports:
      - 5601:5601
    healthcheck:
      test: ["CMD-SHELL", "/bin/bash -c 'sleep 5' || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      subnet:
        ipv4_address: 192.168.123.3
    depends_on:
      - elasticsearch
    command: ["/bin/bash", "-c", "kibana > /applogs/app.log 2>&1"]
    # command: ["sleep", "infinity"]
    x-app-log: "/applogs"

  elasticsearch:
    image: docker.pengyihao.top/vulhub/elasticsearch:5.6.16
    networks:
      subnet:
        ipv4_address: 192.168.123.4

networks:
  subnet:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.123.0/24

x-steps:
  - blocking: false
    command:
      - python
      - gen.py
    name: normal
    service: users

  - name: "Wait for 10min"
    service: users
    command: ["sleep", "600"]
    blocking: true

  - blocking: false
    command:
      - python
      - "-u"
      - attack.py
    name: attacking
    is_attack: true
    service: users

  - name: "Wait for 10min"
    service: users
    command: ["sleep", "600"]
    blocking: true
