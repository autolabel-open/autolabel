import os
import sys
import docker  # type: ignore
from loguru import logger

from config_applog import container_names, applog_path_prefixes

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("需要有一个参数INSTANCE")
        exit(1)

    INSTANCE = sys.argv[1]
    os.system(f"cp write_uuid.c write_uuid_{INSTANCE}.c")

    pids = []
    applog_path_prefixes_list = []
    client = docker.from_env()

    for cnm in container_names:
        try:
            container = client.containers.get(cnm)
            pid = container.attrs["State"]["Pid"]
            pids.append(pid)
            applog_path_prefixes_list.append(applog_path_prefixes[cnm])
        except Exception as e:
            logger.exception(e)
            exit(0)

    logger.info(pids)

    pid_str = ", ".join([str(pid) for pid in pids])
    len_pid_str = f"#define CONTAINER_NUMS {len(pids)}\n"
    pid_str = f"const int container_pids[] = {{{pid_str}}};\n\n"

    applog_str = ", ".join([f'"{prefix}"' for prefix in applog_path_prefixes_list])
    applog_str = f"const char *applog_path_prefixes[] = {{{applog_str}}};\n\n"

    with open("write_uuid.h", "w") as out:
        out.write("// Auto generated by configure.py.\n")
        out.write("// Do not change it manually.\n\n")
        out.write(len_pid_str + pid_str + applog_str)
